var t=["Shift","Meta","Alt","Control"],e="object"==typeof navigator&&/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"Meta":"Control";function n(t,e){return"function"==typeof t.getModifierState&&t.getModifierState(e)}function r(t){return t.trim().split(" ").map(function(t){var n=t.split(/\b\+/),r=n.pop();return[n=n.map(function(t){return"$mod"===t?e:t}),r]})}function o(e,o){var i;void 0===o&&(o={});var a=null!=(i=o.timeout)?i:1e3,u=Object.keys(e).map(function(t){return[r(t),e[t]]}),c=new Map,f=null;return function(e){e instanceof KeyboardEvent&&(u.forEach(function(r){var o=r[0],i=r[1],a=c.get(o)||o;!function(e,r){return!(r[1].toUpperCase()!==e.key.toUpperCase()&&r[1]!==e.code||r[0].find(function(t){return!n(e,t)})||t.find(function(t){return!r[0].includes(t)&&r[1]!==t&&n(e,t)}))}(e,a[0])?n(e,e.key)||c.delete(o):a.length>1?c.set(o,a.slice(1)):(c.delete(o),i(e))}),f&&clearTimeout(f),f=setTimeout(c.clear.bind(c),a))}}function i(t,e,n){var r;void 0===n&&(n={});var i=null!=(r=n.event)?r:"keydown",a=o(e,n);return t.addEventListener(i,a),function(){t.removeEventListener(i,a)}}export{o as createKeybindingsHandler,r as parseKeybinding,i as tinykeys};
//# sourceMappingURL=tinykeys.module.js.map
